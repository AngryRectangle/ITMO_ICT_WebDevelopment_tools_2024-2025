{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to \u041c\u043e\u0438 \u043b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u043d\u044b\u0435 \u0440\u0430\u0431\u043e\u0442\u044b \u041b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u043d\u044b\u0435 \u0440\u0430\u0431\u043e\u0442\u044b \u041a\u0430\u0445\u0438\u043a\u0430\u043b\u043e \u041a\u0438\u0440\u0438\u043b\u043b 334725 \u041b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u043d\u0430\u044f \u0440\u0430\u0431\u043e\u0442\u0430 1 \u0417\u0430\u0434\u0430\u043d\u0438\u0435 1","title":"Welcome to \u041c\u043e\u0438 \u043b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u043d\u044b\u0435 \u0440\u0430\u0431\u043e\u0442\u044b"},{"location":"#welcome-to","text":"\u041b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u043d\u044b\u0435 \u0440\u0430\u0431\u043e\u0442\u044b \u041a\u0430\u0445\u0438\u043a\u0430\u043b\u043e \u041a\u0438\u0440\u0438\u043b\u043b 334725","title":"Welcome to \u041c\u043e\u0438 \u043b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u043d\u044b\u0435 \u0440\u0430\u0431\u043e\u0442\u044b"},{"location":"#1","text":"\u0417\u0430\u0434\u0430\u043d\u0438\u0435 1","title":"\u041b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u043d\u0430\u044f \u0440\u0430\u0431\u043e\u0442\u0430 1"},{"location":"lab1/","text":"\u0426\u0435\u043b\u0438 \u041d\u0430\u0443\u0447\u0438\u0442\u0441\u044f \u0440\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u044b\u0432\u0430\u0442\u044c \u043f\u043e\u043b\u043d\u043e\u0446\u0435\u043d\u043d\u043e\u0435 \u0441\u0435\u0440\u0432\u0435\u0440\u043d\u043e\u0435 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0435 \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u0444\u0440\u0435\u0439\u043c\u0432\u043e\u0440\u043a\u0430 FastAPI \u0441 \u043f\u0440\u0438\u043c\u0435\u043d\u0435\u043d\u0438\u0435\u043c \u0434\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u0445 \u0441\u0440\u0435\u0434\u0441\u0442\u0432 \u0438 \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a. \u0422\u0435\u043c\u0430 \u041d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043e\u043c \u0441\u043e\u0437\u0434\u0430\u0442\u044c \u043f\u0440\u043e\u0441\u0442\u043e\u0439 \u0441\u0435\u0440\u0432\u0438\u0441 \u0434\u043b\u044f \u0443\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u043b\u0438\u0447\u043d\u044b\u043c\u0438 \u0444\u0438\u043d\u0430\u043d\u0441\u0430\u043c\u0438. \u0421\u0435\u0440\u0432\u0438\u0441 \u0434\u043e\u043b\u0436\u0435\u043d \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u0442\u044c \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f\u043c \u0432\u0432\u043e\u0434\u0438\u0442\u044c \u0434\u043e\u0445\u043e\u0434\u044b \u0438 \u0440\u0430\u0441\u0445\u043e\u0434\u044b, \u0443\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0442\u044c \u0431\u044e\u0434\u0436\u0435\u0442\u044b \u043d\u0430 \u0440\u0430\u0437\u043b\u0438\u0447\u043d\u044b\u0435 \u043a\u0430\u0442\u0435\u0433\u043e\u0440\u0438\u0438, \u0430 \u0442\u0430\u043a\u0436\u0435 \u043f\u0440\u043e\u0441\u043c\u0430\u0442\u0440\u0438\u0432\u0430\u0442\u044c \u043e\u0442\u0447\u0435\u0442\u044b \u043e \u0441\u0432\u043e\u0438\u0445 \u0444\u0438\u043d\u0430\u043d\u0441\u0430\u0445. \u0414\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u0435 \u0444\u0443\u043d\u043a\u0446\u0438\u0438 \u043c\u043e\u0433\u0443\u0442 \u0432\u043a\u043b\u044e\u0447\u0430\u0442\u044c \u0432 \u0441\u0435\u0431\u044f \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0441\u0442\u044c \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u044f \u0443\u0432\u0435\u0434\u043e\u043c\u043b\u0435\u043d\u0438\u0439 \u043e \u043f\u0440\u0435\u0432\u044b\u0448\u0435\u043d\u0438\u0438 \u0431\u044e\u0434\u0436\u0435\u0442\u0430, \u0430\u043d\u0430\u043b\u0438\u0437\u0430 \u0442\u0440\u0430\u0442 \u0438 \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0438 \u0446\u0435\u043b\u0435\u0439 \u043d\u0430 \u0431\u0443\u0434\u0443\u0449\u0435\u0435. \u041c\u043e\u0434\u0435\u043b\u044c \u0434\u0430\u043d\u043d\u044b\u0445 \u0414\u043b\u044f \u0432\u0435\u0434\u0435\u043d\u0438\u044f \u0443\u0447\u0451\u0442\u0430 \u0440\u0430\u0441\u0445\u043e\u0434\u043e\u0432 \u0438 \u0434\u043e\u0445\u043e\u0434\u043e\u0432 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0438\u043e\u043d\u043d\u0430\u044f \u0441\u0438\u0441\u0442\u0435\u043c\u0430 \u0441 \u0437\u0430\u043f\u0438\u0441\u044c\u044e \u043f\u0440\u043e\u043c\u0435\u0436\u0443\u0442\u043e\u0447\u043d\u043e\u0433\u043e \u0438\u0442\u043e\u0433\u0443 \u0432 \u0431\u0430\u043b\u0430\u043d\u0441 \u0441\u0447\u0451\u0442\u0430. \u0423 \u043a\u0430\u0436\u0434\u043e\u0439 \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0438\u0438 \u0435\u0441\u0442\u044c \u0441\u0432\u043e\u044f \u043a\u0430\u0442\u0435\u0433\u043e\u0440\u0438\u044f. \u041f\u0440\u0438\u0445\u043e\u0434 \u0438\u043b\u0438 \u0440\u0430\u0441\u0445\u043e\u0434 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u044f\u0435\u0442\u0441\u044f \u043f\u043e \u0442\u043e\u043c\u0443 + \u0438\u043b\u0438 - \u0437\u043d\u0430\u043a \u0432 \u043f\u043e\u043b\u0435 amount. \u0427\u0442\u043e\u0431\u044b \u0441\u0442\u0430\u0432\u0438\u0442\u044c \u0446\u0435\u043b\u0438 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c \u043c\u043e\u0436\u0435\u0442 \u0437\u0430\u0432\u0435\u0441\u0442\u0438 \u043e\u0442\u0434\u0435\u043b\u044c\u043d\u044b\u0439 \u0441\u0447\u0451\u0442 \u0434\u043b\u044f \u043d\u0430\u043a\u043e\u043f\u043b\u0435\u043d\u0438\u0439. \u041d\u0430 \u044d\u0442\u043e\u0442 \u0441\u0447\u0451\u0442 \u043c\u043e\u0436\u043d\u043e \u043f\u043e\u0441\u0442\u0430\u0432\u0438\u0442\u044c \u0446\u0435\u043b\u044c \u0438 \u0434\u0435\u0434\u043b\u0430\u0439\u043d. \u0414\u043b\u044f \u0431\u044e\u0434\u0436\u0435\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f \u0435\u0441\u0442\u044c \u0444\u0443\u043d\u043a\u0446\u0438\u043e\u043d\u0430\u043b \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0431\u044e\u0434\u0436\u0435\u0442\u0430 \u043d\u0430 \u043a\u0430\u0442\u0435\u0433\u043e\u0440\u0438\u0438 \u0438 \u0441\u0447\u0451\u0442, \u0434\u043b\u044f \u043a\u043e\u0442\u043e\u0440\u043e\u0433\u043e \u043e\u043d \u0431\u0443\u0434\u0435\u0442 \u043f\u0440\u0438\u043c\u0435\u043d\u044f\u0442\u044c\u0441\u044f. \u0423 \u0431\u044e\u0434\u0436\u0435\u0442\u0430 \u0435\u0441\u0442\u044c \u043d\u0430\u0447\u0430\u043b\u044c\u043d\u044b\u0439 \u0438 \u043a\u043e\u043d\u0435\u0447\u043d\u044b\u0439 \u0441\u0440\u043e\u043a. API \u0417\u0430\u0434\u0430\u043d\u0438\u0435 \u043d\u0430 15 \u0431\u0430\u043b\u043b\u043e\u0432 \u042d\u043d\u0434\u043f\u043e\u0438\u043d\u0442\u044b \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u0430\u0446\u0438\u0438 \u0438 \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u0438: - /token - POST - \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0442\u043e\u043a\u0435\u043d\u0430 \u0434\u043e\u0441\u0442\u0443\u043f\u0430 - /users/me - GET - \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438 \u043e \u0442\u0435\u043a\u0443\u0449\u0435\u043c \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435 \u043f\u043e \u0442\u043e\u043a\u0435\u043d\u0443 \u0438 \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0430 \u0435\u0433\u043e \u0432\u0430\u043b\u0438\u0434\u043d\u043e\u0441\u0442\u0438 - /users - GET - \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0441\u043f\u0438\u0441\u043a\u0430 \u0432\u0441\u0435\u0445 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u0439 - /users - POST - \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u044f \u041f\u0430\u0440\u043e\u043b\u044c \u0445\u0440\u0430\u043d\u0438\u0442\u0441\u044f \u0432 \u0431\u0430\u0437\u0435 \u0434\u0430\u043d\u043d\u044b\u0445 \u0432 \u0432\u0438\u0434\u0435 \u0445\u0435\u0448\u0430 argon2. \u0413\u0435\u043d\u0435\u0440\u0438\u0440\u0443\u0435\u0442\u0441\u044f \u0447\u0435\u0440\u0435\u0437 passlib. \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f \u0442\u0430\u043a \u0436\u0435 \u043f\u0435\u0440\u0435\u0446, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0445\u0440\u0430\u043d\u0438\u0442\u0441\u044f \u0432 env \u0444\u0430\u0439\u043b\u0435. \u0421\u043e\u043b\u044c \u0445\u0440\u0430\u043d\u0438\u0442\u0441\u044f \u0432\u043d\u0443\u0442\u0440\u0438 \u0441\u0442\u0440\u043e\u043a\u0438 \u043f\u043e\u043b\u0443\u0447\u0430\u0435\u043c\u043e\u0439 \u0438\u0437 passlib \u0432 \u0431\u0430\u0437\u0435 \u0434\u0430\u043d\u043d\u044b\u0445. pepper = os.getenv('PEPPER') pwd_context = CryptContext(schemes=[\"argon2\"]) def hash_password(plain_password: str) -> str: pwd_with_pepper = plain_password + pepper return pwd_context.hash(pwd_with_pepper) def verify_password(plain_password: str, hashed: str) -> bool: pwd_with_pepper = plain_password + pepper return pwd_context.verify(pwd_with_pepper, hashed) \u0413\u0435\u043d\u0435\u0440\u0438\u0440\u0443\u044e JWT \u0447\u0435\u0440\u0435\u0437 jose \u0438 \u043e\u0442\u0434\u0430\u044e \u0435\u0433\u043e \u0432 token \u044d\u043d\u0434\u043f\u043e\u0438\u043d\u0442\u0435 def create_access_token( data: dict, expires_delta: Optional[timedelta] = None ) -> str: to_encode = data.copy() expire = datetime.utcnow() + (expires_delta or timedelta(minutes=LIFETIME_IN_MINUTES)) to_encode.update({\"exp\": expire}) return jwt.encode(to_encode, SECRET_KEY, algorithm=ALGORITHM) \u0420\u0443\u0447\u043d\u0430\u044f \u0432\u0430\u043b\u0438\u0434\u0430\u0446\u0438\u044f \u0438 \u043f\u0430\u0440\u0441\u043d\u0433 JWT. \u0420\u0430\u0437\u0431\u0438\u0432\u0430\u044e \u043d\u0430 \u043a\u0443\u0441\u043a\u0438, \u043f\u0440\u043e\u0432\u0435\u0440\u044f\u044e \u043f\u043e\u0434\u043f\u0438\u0441\u044c, \u0434\u0435\u043a\u043e\u0434\u0438\u0440\u0443\u044e \u0442\u0435\u043b\u043e \u0438 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u044e \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u0438\u0437 \u0431\u0434: def get_current_user( token: str = Depends(oauth2_scheme), db: Session = Depends(get_session), ) -> User: header_b64, payload_b64, sig_b64 = token.split(\".\") payload_json = _b64url_decode(payload_b64).decode(\"utf-8\") signing_input = f\"{header_b64}.{payload_b64}\".encode(\"ascii\") expected_sig = hmac.new( key=SECRET_KEY.encode(\"utf-8\"), msg=signing_input, digestmod=hashlib.sha256 ).digest() actual_sig = _b64url_decode(sig_b64) print(expected_sig) print(actual_sig) if not hmac.compare_digest(expected_sig, actual_sig): raise HTTPException( status_code=status.HTTP_401_UNAUTHORIZED, detail=\"Invalid token signature\", headers={\"WWW-Authenticate\": \"Bearer\"}, ) payload = json.loads(payload_json) user_id = payload.get(\"sub\") user = db.get(User, user_id) if not user: raise HTTPException( status_code=status.HTTP_401_UNAUTHORIZED, detail=\"User not found\", headers={\"WWW-Authenticate\": \"Bearer\"}, ) return user","title":"Lab1"},{"location":"lab1/#_1","text":"\u041d\u0430\u0443\u0447\u0438\u0442\u0441\u044f \u0440\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u044b\u0432\u0430\u0442\u044c \u043f\u043e\u043b\u043d\u043e\u0446\u0435\u043d\u043d\u043e\u0435 \u0441\u0435\u0440\u0432\u0435\u0440\u043d\u043e\u0435 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0435 \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u0444\u0440\u0435\u0439\u043c\u0432\u043e\u0440\u043a\u0430 FastAPI \u0441 \u043f\u0440\u0438\u043c\u0435\u043d\u0435\u043d\u0438\u0435\u043c \u0434\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u0445 \u0441\u0440\u0435\u0434\u0441\u0442\u0432 \u0438 \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a.","title":"\u0426\u0435\u043b\u0438"},{"location":"lab1/#_2","text":"\u041d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043e\u043c \u0441\u043e\u0437\u0434\u0430\u0442\u044c \u043f\u0440\u043e\u0441\u0442\u043e\u0439 \u0441\u0435\u0440\u0432\u0438\u0441 \u0434\u043b\u044f \u0443\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u043b\u0438\u0447\u043d\u044b\u043c\u0438 \u0444\u0438\u043d\u0430\u043d\u0441\u0430\u043c\u0438. \u0421\u0435\u0440\u0432\u0438\u0441 \u0434\u043e\u043b\u0436\u0435\u043d \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u0442\u044c \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f\u043c \u0432\u0432\u043e\u0434\u0438\u0442\u044c \u0434\u043e\u0445\u043e\u0434\u044b \u0438 \u0440\u0430\u0441\u0445\u043e\u0434\u044b, \u0443\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0442\u044c \u0431\u044e\u0434\u0436\u0435\u0442\u044b \u043d\u0430 \u0440\u0430\u0437\u043b\u0438\u0447\u043d\u044b\u0435 \u043a\u0430\u0442\u0435\u0433\u043e\u0440\u0438\u0438, \u0430 \u0442\u0430\u043a\u0436\u0435 \u043f\u0440\u043e\u0441\u043c\u0430\u0442\u0440\u0438\u0432\u0430\u0442\u044c \u043e\u0442\u0447\u0435\u0442\u044b \u043e \u0441\u0432\u043e\u0438\u0445 \u0444\u0438\u043d\u0430\u043d\u0441\u0430\u0445. \u0414\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u0435 \u0444\u0443\u043d\u043a\u0446\u0438\u0438 \u043c\u043e\u0433\u0443\u0442 \u0432\u043a\u043b\u044e\u0447\u0430\u0442\u044c \u0432 \u0441\u0435\u0431\u044f \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0441\u0442\u044c \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u044f \u0443\u0432\u0435\u0434\u043e\u043c\u043b\u0435\u043d\u0438\u0439 \u043e \u043f\u0440\u0435\u0432\u044b\u0448\u0435\u043d\u0438\u0438 \u0431\u044e\u0434\u0436\u0435\u0442\u0430, \u0430\u043d\u0430\u043b\u0438\u0437\u0430 \u0442\u0440\u0430\u0442 \u0438 \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0438 \u0446\u0435\u043b\u0435\u0439 \u043d\u0430 \u0431\u0443\u0434\u0443\u0449\u0435\u0435.","title":"\u0422\u0435\u043c\u0430"},{"location":"lab1/#_3","text":"\u0414\u043b\u044f \u0432\u0435\u0434\u0435\u043d\u0438\u044f \u0443\u0447\u0451\u0442\u0430 \u0440\u0430\u0441\u0445\u043e\u0434\u043e\u0432 \u0438 \u0434\u043e\u0445\u043e\u0434\u043e\u0432 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0438\u043e\u043d\u043d\u0430\u044f \u0441\u0438\u0441\u0442\u0435\u043c\u0430 \u0441 \u0437\u0430\u043f\u0438\u0441\u044c\u044e \u043f\u0440\u043e\u043c\u0435\u0436\u0443\u0442\u043e\u0447\u043d\u043e\u0433\u043e \u0438\u0442\u043e\u0433\u0443 \u0432 \u0431\u0430\u043b\u0430\u043d\u0441 \u0441\u0447\u0451\u0442\u0430. \u0423 \u043a\u0430\u0436\u0434\u043e\u0439 \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0438\u0438 \u0435\u0441\u0442\u044c \u0441\u0432\u043e\u044f \u043a\u0430\u0442\u0435\u0433\u043e\u0440\u0438\u044f. \u041f\u0440\u0438\u0445\u043e\u0434 \u0438\u043b\u0438 \u0440\u0430\u0441\u0445\u043e\u0434 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u044f\u0435\u0442\u0441\u044f \u043f\u043e \u0442\u043e\u043c\u0443 + \u0438\u043b\u0438 - \u0437\u043d\u0430\u043a \u0432 \u043f\u043e\u043b\u0435 amount. \u0427\u0442\u043e\u0431\u044b \u0441\u0442\u0430\u0432\u0438\u0442\u044c \u0446\u0435\u043b\u0438 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c \u043c\u043e\u0436\u0435\u0442 \u0437\u0430\u0432\u0435\u0441\u0442\u0438 \u043e\u0442\u0434\u0435\u043b\u044c\u043d\u044b\u0439 \u0441\u0447\u0451\u0442 \u0434\u043b\u044f \u043d\u0430\u043a\u043e\u043f\u043b\u0435\u043d\u0438\u0439. \u041d\u0430 \u044d\u0442\u043e\u0442 \u0441\u0447\u0451\u0442 \u043c\u043e\u0436\u043d\u043e \u043f\u043e\u0441\u0442\u0430\u0432\u0438\u0442\u044c \u0446\u0435\u043b\u044c \u0438 \u0434\u0435\u0434\u043b\u0430\u0439\u043d. \u0414\u043b\u044f \u0431\u044e\u0434\u0436\u0435\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f \u0435\u0441\u0442\u044c \u0444\u0443\u043d\u043a\u0446\u0438\u043e\u043d\u0430\u043b \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0431\u044e\u0434\u0436\u0435\u0442\u0430 \u043d\u0430 \u043a\u0430\u0442\u0435\u0433\u043e\u0440\u0438\u0438 \u0438 \u0441\u0447\u0451\u0442, \u0434\u043b\u044f \u043a\u043e\u0442\u043e\u0440\u043e\u0433\u043e \u043e\u043d \u0431\u0443\u0434\u0435\u0442 \u043f\u0440\u0438\u043c\u0435\u043d\u044f\u0442\u044c\u0441\u044f. \u0423 \u0431\u044e\u0434\u0436\u0435\u0442\u0430 \u0435\u0441\u0442\u044c \u043d\u0430\u0447\u0430\u043b\u044c\u043d\u044b\u0439 \u0438 \u043a\u043e\u043d\u0435\u0447\u043d\u044b\u0439 \u0441\u0440\u043e\u043a.","title":"\u041c\u043e\u0434\u0435\u043b\u044c \u0434\u0430\u043d\u043d\u044b\u0445"},{"location":"lab1/#api","text":"","title":"API"},{"location":"lab1/#15","text":"\u042d\u043d\u0434\u043f\u043e\u0438\u043d\u0442\u044b \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u0430\u0446\u0438\u0438 \u0438 \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u0438: - /token - POST - \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0442\u043e\u043a\u0435\u043d\u0430 \u0434\u043e\u0441\u0442\u0443\u043f\u0430 - /users/me - GET - \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438 \u043e \u0442\u0435\u043a\u0443\u0449\u0435\u043c \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435 \u043f\u043e \u0442\u043e\u043a\u0435\u043d\u0443 \u0438 \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0430 \u0435\u0433\u043e \u0432\u0430\u043b\u0438\u0434\u043d\u043e\u0441\u0442\u0438 - /users - GET - \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0441\u043f\u0438\u0441\u043a\u0430 \u0432\u0441\u0435\u0445 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u0439 - /users - POST - \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u044f \u041f\u0430\u0440\u043e\u043b\u044c \u0445\u0440\u0430\u043d\u0438\u0442\u0441\u044f \u0432 \u0431\u0430\u0437\u0435 \u0434\u0430\u043d\u043d\u044b\u0445 \u0432 \u0432\u0438\u0434\u0435 \u0445\u0435\u0448\u0430 argon2. \u0413\u0435\u043d\u0435\u0440\u0438\u0440\u0443\u0435\u0442\u0441\u044f \u0447\u0435\u0440\u0435\u0437 passlib. \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f \u0442\u0430\u043a \u0436\u0435 \u043f\u0435\u0440\u0435\u0446, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0445\u0440\u0430\u043d\u0438\u0442\u0441\u044f \u0432 env \u0444\u0430\u0439\u043b\u0435. \u0421\u043e\u043b\u044c \u0445\u0440\u0430\u043d\u0438\u0442\u0441\u044f \u0432\u043d\u0443\u0442\u0440\u0438 \u0441\u0442\u0440\u043e\u043a\u0438 \u043f\u043e\u043b\u0443\u0447\u0430\u0435\u043c\u043e\u0439 \u0438\u0437 passlib \u0432 \u0431\u0430\u0437\u0435 \u0434\u0430\u043d\u043d\u044b\u0445. pepper = os.getenv('PEPPER') pwd_context = CryptContext(schemes=[\"argon2\"]) def hash_password(plain_password: str) -> str: pwd_with_pepper = plain_password + pepper return pwd_context.hash(pwd_with_pepper) def verify_password(plain_password: str, hashed: str) -> bool: pwd_with_pepper = plain_password + pepper return pwd_context.verify(pwd_with_pepper, hashed) \u0413\u0435\u043d\u0435\u0440\u0438\u0440\u0443\u044e JWT \u0447\u0435\u0440\u0435\u0437 jose \u0438 \u043e\u0442\u0434\u0430\u044e \u0435\u0433\u043e \u0432 token \u044d\u043d\u0434\u043f\u043e\u0438\u043d\u0442\u0435 def create_access_token( data: dict, expires_delta: Optional[timedelta] = None ) -> str: to_encode = data.copy() expire = datetime.utcnow() + (expires_delta or timedelta(minutes=LIFETIME_IN_MINUTES)) to_encode.update({\"exp\": expire}) return jwt.encode(to_encode, SECRET_KEY, algorithm=ALGORITHM) \u0420\u0443\u0447\u043d\u0430\u044f \u0432\u0430\u043b\u0438\u0434\u0430\u0446\u0438\u044f \u0438 \u043f\u0430\u0440\u0441\u043d\u0433 JWT. \u0420\u0430\u0437\u0431\u0438\u0432\u0430\u044e \u043d\u0430 \u043a\u0443\u0441\u043a\u0438, \u043f\u0440\u043e\u0432\u0435\u0440\u044f\u044e \u043f\u043e\u0434\u043f\u0438\u0441\u044c, \u0434\u0435\u043a\u043e\u0434\u0438\u0440\u0443\u044e \u0442\u0435\u043b\u043e \u0438 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u044e \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u0438\u0437 \u0431\u0434: def get_current_user( token: str = Depends(oauth2_scheme), db: Session = Depends(get_session), ) -> User: header_b64, payload_b64, sig_b64 = token.split(\".\") payload_json = _b64url_decode(payload_b64).decode(\"utf-8\") signing_input = f\"{header_b64}.{payload_b64}\".encode(\"ascii\") expected_sig = hmac.new( key=SECRET_KEY.encode(\"utf-8\"), msg=signing_input, digestmod=hashlib.sha256 ).digest() actual_sig = _b64url_decode(sig_b64) print(expected_sig) print(actual_sig) if not hmac.compare_digest(expected_sig, actual_sig): raise HTTPException( status_code=status.HTTP_401_UNAUTHORIZED, detail=\"Invalid token signature\", headers={\"WWW-Authenticate\": \"Bearer\"}, ) payload = json.loads(payload_json) user_id = payload.get(\"sub\") user = db.get(User, user_id) if not user: raise HTTPException( status_code=status.HTTP_401_UNAUTHORIZED, detail=\"User not found\", headers={\"WWW-Authenticate\": \"Bearer\"}, ) return user","title":"\u0417\u0430\u0434\u0430\u043d\u0438\u0435 \u043d\u0430 15 \u0431\u0430\u043b\u043b\u043e\u0432"}]}